~~ Copyright 2010-2013 Norconex Inc.
~~ 
~~ This file is part of Norconex HTTP Collector.
~~ 
~~ Norconex HTTP Collector is free software: you can redistribute it and/or 
~~ modify it under the terms of the GNU General Public License as published by
~~ the Free Software Foundation, either version 3 of the License, or
~~ (at your option) any later version.
~~ 
~~ Norconex HTTP Collector is distributed in the hope that it will be useful, 
~~ but WITHOUT ANY WARRANTY; without even the implied warranty of 
~~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
~~ GNU General Public License for more details.
~~ 
~~ You should have received a copy of the GNU General Public License
~~ along with Norconex HTTP Collector. If not, see <http://www.gnu.org/licenses/>.
            ------
            Usage
            ------
            Norconex Inc.
            ------

%{snippet|file=src/main/resources/adsense.txt|verbatim=false}

Usage

  Use the Norconex HTTP Collector as a command-line application or java library.

* Command line

+-------------------------------+
usage: collector-http[.bat|.sh]
 -a,--action <arg>      Required: one of start|resume|stop
 -c,--config <arg>      Required: HTTP Collector configuration file.
 -v,--variables <arg>   Optional: variable file.
+-------------------------------+

* Java

  Simplly use Maven, or add all JAR files in your installation "lib" folder 
  to your application classpath.  Configure the 
  {{{./apidocs/com/norconex/collector/http/HttpCollector.html}HttpCollector}} 
  class, by passing it a 
  {{{./apidocs/com/norconex/collector/http/HttpCollectorConfig.html}HttpCollectorConfig}}.
  You can build the configuration using java, 
  or by loading an XML file using the 
  {{{./apidocs/com/norconex/collector/http/HttpCollectorConfigLoader.html}HttpCollectorConfigLoader}}
  class. Below is a sample code usage:

+-------------------------------+
 /* XML configuration: */
 //HttpCollectorConfig config = HttpCollectorConfigLoader.loadCollectorConfig(
 //    myXMLFile, myVariableFile);

 /* Java configuration: */
 HttpCollectorConfig config = new HttpCollectorConfig();
 config.setId("myid");
 config.setLogsDir("/tmp/logs/");
 ...
 
 HttpCollector collector = new HttpCollector(config);
 collector.crawl(true);
+-------------------------------+

  Refer to the {{{./apidocs/index.html}HTTP Collector Javadoc}} for more 
  documentation or the {{{./configuration.html}Configuration}} page for the 
  XML configuration options.

** Extend the HTTP Collector

  To create your own feature implementations, create a new Java project in your
  favourite IDE. Use Maven or add to your classpath all the files contained in 
  the "lib" folder of the HTTP Collector installation.  Configure your project 
  to have its binary output directory to be the "classes" folder of the 
  importer. Automatically, code created and stored under "classes" will be 
  picked up by the HTTP Collector when run.


